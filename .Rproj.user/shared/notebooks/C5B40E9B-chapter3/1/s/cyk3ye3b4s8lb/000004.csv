"0","m <- glm(high_use ~  school +     sex +        age +        address +   famsize +    Pstatus  + Medu +       Fedu +       Mjob + Fjob +       reason +     nursery +    internet   + guardian + traveltime + studytime + failures + schoolsup + "
"0","famsup +    paid +      activities + higher + romantic + famrel + freetime+ goout+ Dalc+ Walc +       health + absences + G1 + G2 +  G3  , data = alc, family = ""binomial"")"
"2","glm.fit: algorithm did not converge"
"2","glm.fit: fitted probabilities numerically 0 or 1 occurred"
"0","# predict() the probability of high_use"
"0","probabilities <- predict(m, type = ""response"")"
"0","# add the predicted probabilities to 'alc'"
"0","alc <- mutate(alc, probability = probabilities)"
"0","# use the probabilities to make a prediction of high_use"
"0","alc <- mutate(alc, prediction = probability > 0.5)"
"0","# tabulate the target variable versus the predictions"
"0","table(high_use = alc$high_use, prediction = alc$prediction)"
"1","        prediction
"
"1","high_use"
"1"," FALSE"
"1"," TRUE"
"1","
   FALSE"
"1","   270"
"1","    0"
"1","
   TRUE "
"1","     0"
"1","  112"
"1","
"
"0","summary(alc$high_use)"
"1","   Mode "
"1","  FALSE "
"1","   TRUE "
"1","
"
"1","logical "
"1","    270 "
"1","    112 "
"1","
"
"0","# the logistic regression model m and dataset alc with predictions are available"
"0","# define a loss function (average prediction error)"
"0","loss_func <- function(class, prob) {"
"0","  n_wrong <- abs(class - prob) > 0.5"
"0","  mean(n_wrong)"
"0","}"
"0","# call loss_func to compute the average number of wrong predictions in the (training) data"
"0","loss_func(class = alc$high_use, prob = alc$probability)"
"1","[1]"
"1"," 0"
"1","
"
"0","# kun prob = 0, kuinka usein v채채r채ss채"
"0","# kun prob = 1, kuinka usein oikeassa"
"0","# kun prob= alc$probability"
