RATSL <- read.table("RATSL.txt", header = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
RATSL$Group <-factor(RATSL$Group)
RATSL$ID <- factor(RATSL$ID)
glimpse(RATSL)
ggplot(RATSL, aes(x = Time, y = Weight, linetype = ID)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ Group, labeller = label_both) +
theme(legend.position = "none") +
scale_y_continuous(limits = c(min(RATSL$Weight), max(RATSL$Weight)))
# Standardise the variable bprs
RATSL <- RATSL %>%
group_by(Time) %>%
mutate(stdWeight = ((Weight - mean(Weight))/sd(Weight))) %>%
ungroup()
# Glimpse the data
glimpse(RATSL)
# Plot again with the standardised bprs
ggplot(RATSL, aes(x = Time, y = stdWeight, linetype = ID)) +
geom_line() +
scale_linetype_manual(values = rep(1:10, times=4)) +
facet_grid(. ~ Group, labeller = label_both) +
scale_y_continuous(name = "standardized weight")
# Calculate the mean of weights by time and group:
RATSL <- RATSL %>%
group_by(.dots= c("Time", "Group")) %>%
mutate(meanWeight = (mean(Weight))) %>%
ungroup()
#Calculate standard deviation by time and group:
RATSL <- RATSL %>%
group_by(.dots=c("Time", "Group")) %>%
mutate(seWeight = (sd(Weight))) %>%
ungroup()
# Following Vehkalahti :
# https://github.com/KimmoVehkalahti/MABS/blob/master/Examples/Chapter-08-examples.Rmd
p1 <- ggplot(RATSL, aes(x = Time, y = meanWeight, linetype = Group, shape = Group, colour= Group))
p2 <- p1 + geom_line() + scale_linetype_manual(values = c(1,2,3))
p3 <- p2 + geom_point(size=3) + scale_shape_manual(values = c(1,2,3))
p4 <- p3 + geom_errorbar(aes(ymin=meanWeight-seWeight, ymax=meanWeight+seWeight, linetype="1"), width=0.3)
p5 <- p4 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p6 <- p5 + theme(legend.position = c(0.9,0.4))
p7 <- p6 + scale_y_continuous(name = "mean(weight) +/- se(weight)")
p7
# Create a summary data by treatment groups and subject with mean as the summary variable (ignoring baseline week 1).
RATSL64S <- RATSL %>%
filter(Time > 1) %>%
group_by(Group, ID) %>%
summarise(average=mean(Weight)) %>%
ungroup()
# Glimpse the data
glimpse(RATSL64S)
# Draw a boxplot of the mean versus treatment
ggplot(RATSL64S, aes(x = Group, y = average)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(Weight), periods 8-64")
RATSL64SF <- RATSL64S %>% filter(average < 580, average > 240, average != 495.2)
ggplot(RATSL64SF, aes(x = Group, y = average)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(Weight), periods 8-64")
RATSL64SF2 <- RATSL64S %>% filter(average < 580)
ggplot(RATSL64SF2, aes(x = Group, y = average)) +
geom_boxplot() +
stat_summary(fun.y = "mean", geom = "point", shape=23, size=4, fill = "white") +
scale_y_continuous(name = "mean(Weight), periods 8-64")
# Original data:
RATS <- read.table("https://raw.githubusercontent.com/KimmoVehkalahti/MABS/master/Examples/data/rats.txt", header = TRUE)
# Add the baseline from the original data as a new variable to the summary data
RATSL64SBASE <- RATSL64S %>%
mutate(baseline = RATS$WD1)
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group, data = RATSL64SBASE)
# Compute the analysis of variance table for the fitted model with anova()
anova(fit)
RATSL$Group1 <- RATSL$Group
RATSL$Group1[RATS$GRoup == 1] <- 1
RATSL$Group1[RATS$Group == 2] <-0
RATSL$Group1[RATS$Group == 3] <-0
RATSL$Group1
glimpse(RATSL)
RATS$Group <- as.character(as.numeric(RATS$Group))
RATSL$Group1 <- RATSL$Group
RATSL$Group1[RATS$GRoup == 1] <- 1
RATSL$Group1[RATS$Group == 2] <-0
RATSL$Group1[RATS$Group == 3] <-0
RATSL$Group1
glimpse(RATSL)
RATS$Group <- as.character(as.numeric(RATS$Group))
RATSL$Group1 <- RATSL$Group
RATSL$Group1[RATS$GRoup == 1] <- 1
RATSL$Group1[RATS$Group == 2] <-0
RATSL$Group1[RATS$Group == 3] <-0
RATS$Group1 <- as.character(as.numeric(RATS$Group1))
as.character(as.numeric(RATS$Group1))
as.numeric(RATS$Group1))
as.numeric(RATS$Group1)
RATS$Group1
RATSL$Group1[RATS$GRoup == 1] <- 1
RATSL$Group1[RATS$Group == 2] <-0
RATSL$Group1[RATS$Group == 3] <-0
RATS$Group <- as.character(as.numeric(RATS$Group))
RATSL$Group1 <- RATSL$Group
RATSL$Group1[RATS$GRoup == 1] <- 1
RATSL$Group1[RATS$Group == 2] <-0
RATSL$Group1[RATS$Group == 3] <-0
RATS$Group <- as.character(as.numeric(RATS$Group))
RATSL$Group1 <- RATSL$Group
RATSL$Group1[RATS$GRoup == 1] <- TRUE
RATSL$Group1[RATS$Group == 2] <-FALSE
RATSL$Group1[RATS$Group == 3] <-FALSE
RATS$Group1 <- as.character(as.numeric(RATS$Group1))
View(RATSL)
View(RATSL)
RATS$Group <- as.character(as.numeric(RATS$Group))
RATSL$Group1 <- RATSL$Group
RATSL$Group1[RATS$GRoup == 1] <- 1
RATSL$Group1[RATS$Group == 2] <- 0
RATSL$Group1[RATS$Group == 3] <- 0
RATSL$Group1[is.na(RATSL$Group1)] <- 0
View(RATSL)
View(RATSL)
install.packages("fastDummies")
library(fastDummies)
library(fastDummies)
results <- fastDummies::dummy_cols(RATSL$Group)
View(results)
View(results)
library(fastDummies)
library(knitr)
results <- fastDummies::dummy_cols(RATSL$Group)
knitr::kable(results)
View(results)
View(results)
View(results)
View(results)
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
RATS <- RATS %>%
mutate(results)
View(results)
View(results)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
RATS <- RATS %>%
mutate(results$.data_1) %>%
mutate(results$.data_2) %>%
mutate(results$.data_3) %>%
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
RATS <- RATS %>%
mutate(results$.data_1) %>%
RATS$Group1 <- results$.data_1
View(RATS)
View(RATS)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
RATS$Group1 <- results$.data_1
RATS$Group2 <- results$.data_2
RATS$Group3 <- results$data_3
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group1 + Group2 + Group3, data = RATSL64SBASE)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group1, data = RATSL64SBASE)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group1 + Group2, data = RATSL64SBASE)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group1 + Group2 + Group3, data = RATSL64SBASE)
View(RATSL64SBASE)
View(RATSL64SBASE)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$.data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group1 + Group2 + Group3, data = RATSL64SBASE)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$.data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group1 + Group2 + Group3, data = RATSL64SBASE)
# Compute the analysis of variance table for the fitted model with anova()
anova(fit)
View(RATSL64SBASE)
View(RATSL64SBASE)
fit
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$.data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group1 + Group2 + Group3, data = RATSL64SBASE)
# Compute the analysis of variance table for the fitted model with anova()
anova(fit)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$.data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline  + Group2 + Group3, data = RATSL64SBASE)
# Compute the analysis of variance table for the fitted model with anova()
anova(fit)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$.data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group1  + Group3, data = RATSL64SBASE)
# Compute the analysis of variance table for the fitted model with anova()
anova(fit)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$.data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group1 + Group2, data = RATSL64SBASE)
# Compute the analysis of variance table for the fitted model with anova()
anova(fit)
# Create dummies for group1, group2, group3
library(fastDummies)
results <- fastDummies::dummy_cols(RATS$Group)
# Add the variables to the model:
RATSL64SBASE$Group1 <- results$.data_1
RATSL64SBASE$Group2 <- results$.data_2
RATSL64SBASE$Group3 <- results$.data_3
# Fit the linear model with the mean as the response
fit <- lm(average ~ baseline + Group2 + Group3, data = RATSL64SBASE)
# Compute the analysis of variance table for the fitted model with anova()
anova(fit)
